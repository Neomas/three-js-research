/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React, { useEffect, useRef } from "react";
import { useGLTF, useAnimations } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import { Center } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";

type GLTFResult = GLTF & {
  nodes: {
    Cube: THREE.Mesh;
    Cube_1: THREE.Mesh;
    Cube_2: THREE.Mesh;
    Cube_3: THREE.Mesh;
    Cube_4: THREE.Mesh;
    Cube_5: THREE.Mesh;
    Cube001: THREE.Mesh;
    Cube001_1: THREE.Mesh;
    Screw: THREE.Mesh;
    Screw001: THREE.Mesh;
    Screw002: THREE.Mesh;
    Screw003: THREE.Mesh;
    Screw004: THREE.Mesh;
    Screw005: THREE.Mesh;
    Screw006: THREE.Mesh;
    Screw007: THREE.Mesh;
    Screw008: THREE.Mesh;
    Screw009: THREE.Mesh;
    Screw010: THREE.Mesh;
    Screw011: THREE.Mesh;
    Screw012: THREE.Mesh;
    Screw013: THREE.Mesh;
    Screw014: THREE.Mesh;
    Select: THREE.Mesh;
    Start: THREE.Mesh;
  };
  materials: {
    ["Plastic White"]: THREE.MeshStandardMaterial;
    ["Plastic Purple"]: THREE.MeshStandardMaterial;
    ["Plastic Grey Cartridge"]: THREE.MeshStandardMaterial;
    ["Plastic Grey Nero40"]: THREE.MeshStandardMaterial;
    Screen: THREE.MeshPhysicalMaterial;
    Speaker: THREE.MeshStandardMaterial;
    ["Plastic DarkGray Cartridge"]: THREE.MeshStandardMaterial;
    ["Label Cartridge"]: THREE.MeshStandardMaterial;
    Screws: THREE.MeshStandardMaterial;
    ["Plastic Grey Cartridge"]: THREE.MeshStandardMaterial;
  };
};

type ActionName = "ConsoleAction" | "CartridgeAction";
type GLTFActions = Record<ActionName, THREE.AnimationAction>;

export default function Model(props: JSX.IntrinsicElements["group"]) {
  const group = useRef<THREE.Group>();
  const { nodes, materials, animations } = useGLTF(
    "models/console.glb"
  ) as GLTFResult;
  const { actions } = useAnimations<GLTFActions>(animations, group);

  // add a video texture to the screen
  const video = document.createElement("video");
  video.src = "/video.mp4";
  video.loop = true;
  video.muted = true;
  video.play();
  const texture = new THREE.VideoTexture(video);
  texture.flipY = false;
  materials.Screen.map = texture;
  // make the animation emit light so it looks like the screen is on
  materials.Screen.emissive = new THREE.Color(0xffffff);
  materials.Screen.emissiveMap = texture;
  materials.Screen.emissiveIntensity = 1;
  materials.Screen.emissiveMapIntensity = 1;

  useEffect(() => {
    //@ts-ignore
    const cardAction = actions.CartridgeAction as THREE.AnimationAction;

    // play the animation for 1 second and wait 9 seconds until it loops
    cardAction.setDuration(1);
    cardAction.reset().play();
    cardAction.setLoop(THREE.LoopOnce, 1);
    cardAction.clampWhenFinished = true;

    // play the animation for 1 second and wait 9 seconds until it loops
    //@ts-ignore
    const consoleAction = actions.ConsoleAction as THREE.AnimationAction;
    consoleAction.setDuration(10);
    consoleAction.reset().fadeIn(0.5).play();
    consoleAction.setLoop(THREE.LoopOnce, 1);
    consoleAction.clampWhenFinished = true;
  }, []);

  return (
    <>
      <Center>
        {/* @ts-ignore */}
        <ambientLight intensity={0.5} />
        {/* @ts-ignore */}
        <directionalLight position={[10, 10, 5]} intensity={1} lookAt={group} />
        <group ref={group} {...props} dispose={null}>
          <group
            // @ts-ignore
            name="Scene"
          >
            <group
              // @ts-ignore
              name="Console"
              position={[0, 1.087, 0]}
              rotation={[Math.PI / 2, 0, 0.523]}
              userData={{ name: "Console" }}
            >
              <mesh
                // @ts-ignore
                name="Cube"
                castShadow
                receiveShadow
                geometry={nodes.Cube.geometry}
                material={materials["Plastic White"]}
              />
              <mesh
                // @ts-ignore
                name="Cube_1"
                castShadow
                receiveShadow
                geometry={nodes.Cube_1.geometry}
                material={materials["Plastic Purple"]}
              />
              <mesh
                // @ts-ignore
                name="Cube_2"
                castShadow
                receiveShadow
                geometry={nodes.Cube_2.geometry}
                material={materials["Plastic Grey Cartridge"]}
              />
              <mesh
                // @ts-ignore
                name="Cube_3"
                castShadow
                receiveShadow
                geometry={nodes.Cube_3.geometry}
                material={materials["Plastic Grey Nero40"]}
              />
              <mesh
                // @ts-ignore
                name="Cube_4"
                castShadow
                receiveShadow
                geometry={nodes.Cube_4.geometry}
                material={materials.Screen}
              />
              <mesh
                // @ts-ignore
                name="Cube_5"
                castShadow
                receiveShadow
                geometry={nodes.Cube_5.geometry}
                material={materials.Speaker}
              />
              <group
                // @ts-ignore
                name="Cartridge"
                position={[0, 0, -0.282]}
                userData={{ name: "Cartridge" }}
              >
                <mesh
                  // @ts-ignore
                  name="Cube001"
                  castShadow
                  receiveShadow
                  geometry={nodes.Cube001.geometry}
                  material={materials["Plastic DarkGray Cartridge"]}
                />
                <mesh
                  // @ts-ignore
                  name="Cube001_1"
                  castShadow
                  receiveShadow
                  geometry={nodes.Cube001_1.geometry}
                  material={materials["Label Cartridge"]}
                />
              </group>
              <mesh
                // @ts-ignore
                name="Screw"
                castShadow
                receiveShadow
                geometry={nodes.Screw.geometry}
                material={materials.Screws}
                position={[0.004, -0.077, 0.131]}
                rotation={[-Math.PI, -0.392, 0]}
                scale={0.098}
                userData={{ name: "Screw" }}
              />
              <mesh
                // @ts-ignore
                name="Screw001"
                castShadow
                receiveShadow
                geometry={nodes.Screw001.geometry}
                material={materials.Screws}
                position={[0.934, -0.077, -0.003]}
                rotation={[-Math.PI, 0.442, 0]}
                scale={0.098}
                userData={{ name: "Screw.001" }}
              />
              <mesh
                // @ts-ignore
                name="Screw002"
                castShadow
                receiveShadow
                geometry={nodes.Screw002.geometry}
                material={materials.Screws}
                position={[0.934, -0.077, 0.735]}
                rotation={[-Math.PI, 0.442, 0]}
                scale={0.098}
                userData={{ name: "Screw.002" }}
              />
              <mesh
                // @ts-ignore
                name="Screw003"
                castShadow
                receiveShadow
                geometry={nodes.Screw003.geometry}
                material={materials.Screws}
                position={[0.934, -0.077, -0.921]}
                rotation={[-Math.PI, 0.442, 0]}
                scale={0.098}
                userData={{ name: "Screw.003" }}
              />
              <mesh
                // @ts-ignore
                name="Screw004"
                castShadow
                receiveShadow
                geometry={nodes.Screw004.geometry}
                material={materials.Screws}
                position={[-0.93, -0.077, -0.921]}
                rotation={[-Math.PI, 0.442, 0]}
                scale={0.098}
                userData={{ name: "Screw.004" }}
              />
              <mesh
                // @ts-ignore
                name="Screw005"
                castShadow
                receiveShadow
                geometry={nodes.Screw005.geometry}
                material={materials.Screws}
                position={[-0.93, -0.077, -0.005]}
                rotation={[-Math.PI, 1.079, 0]}
                scale={0.098}
                userData={{ name: "Screw.005" }}
              />
              <mesh
                // @ts-ignore
                name="Screw006"
                castShadow
                receiveShadow
                geometry={nodes.Screw006.geometry}
                material={materials.Screws}
                position={[-0.93, -0.077, 0.733]}
                rotation={[-Math.PI, 0.107, 0]}
                scale={0.098}
                userData={{ name: "Screw.006" }}
              />
              <mesh
                // @ts-ignore
                name="Screw007"
                castShadow
                receiveShadow
                geometry={nodes.Screw007.geometry}
                material={materials.Screws}
                position={[-0.641, -0.077, 0.986]}
                rotation={[-Math.PI, -0.439, 0]}
                scale={0.098}
                userData={{ name: "Screw.007" }}
              />
              <mesh
                // @ts-ignore
                name="Screw008"
                castShadow
                receiveShadow
                geometry={nodes.Screw008.geometry}
                material={materials.Screws}
                position={[0.631, -0.077, 0.986]}
                rotation={[-Math.PI, -1.2, 0]}
                scale={0.098}
                userData={{ name: "Screw.008" }}
              />
              <mesh
                // @ts-ignore
                name="Screw009"
                castShadow
                receiveShadow
                geometry={nodes.Screw009.geometry}
                material={materials.Screws}
                position={[0.887, -0.133, -0.091]}
                rotation={[-2.699, 0, -Math.PI / 2]}
                scale={0.098}
                userData={{ name: "Screw.009" }}
              />
              <mesh
                // @ts-ignore
                name="Screw010"
                castShadow
                receiveShadow
                geometry={nodes.Screw010.geometry}
                material={materials.Screws}
                position={[0.887, -0.133, -0.849]}
                rotation={[-2.699, 0, -Math.PI / 2]}
                scale={0.098}
                userData={{ name: "Screw.010" }}
              />
              <mesh
                // @ts-ignore
                name="Screw011"
                castShadow
                receiveShadow
                geometry={nodes.Screw011.geometry}
                material={materials.Screws}
                position={[-0.881, -0.133, -0.849]}
                rotation={[2.699, 0, Math.PI / 2]}
                scale={0.098}
                userData={{ name: "Screw.011" }}
              />
              <mesh
                // @ts-ignore
                name="Screw012"
                castShadow
                receiveShadow
                geometry={nodes.Screw012.geometry}
                material={materials.Screws}
                position={[-0.881, -0.133, -0.091]}
                rotation={[-3.106, 0, Math.PI / 2]}
                scale={0.098}
                userData={{ name: "Screw.012" }}
              />
              <mesh
                // @ts-ignore
                name="Screw013"
                castShadow
                receiveShadow
                geometry={nodes.Screw013.geometry}
                material={materials.Screws}
                position={[-0.816, -0.212, -0.125]}
                rotation={[-Math.PI, 1.079, 0]}
                scale={0.098}
                userData={{ name: "Screw.013" }}
              />
              <mesh
                // @ts-ignore
                name="Screw014"
                castShadow
                receiveShadow
                geometry={nodes.Screw014.geometry}
                material={materials.Screws}
                position={[0.819, -0.212, -0.125]}
                rotation={[-Math.PI, 0.579, 0]}
                scale={0.098}
                userData={{ name: "Screw.014" }}
              />
              <mesh
                // @ts-ignore
                name="Select"
                castShadow
                receiveShadow
                geometry={nodes.Select.geometry}
                material={materials["Plastic Grey Cartridge"]}
                position={[0.102, 0.289, 0.821]}
                scale={0.033}
                userData={{ name: "Select" }}
              />
              <mesh
                // @ts-ignore
                name="Start"
                castShadow
                receiveShadow
                geometry={nodes.Start.geometry}
                material={materials["Plastic Grey Cartridge"]}
                position={[-0.129, 0.289, 1.026]}
                scale={0.033}
                userData={{ name: "Start" }}
              />
            </group>
          </group>
        </group>
      </Center>
    </>
  );
}

useGLTF.preload("/console.glb");
